(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{294:function(a,t,s){"use strict";s.r(t);var e=s(10),n=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("p",[a._v("本项目直接使用了一个功能强大的代码生成器 "),t("code",[a._v("睿Rui")]),a._v("，这个代码生成器可以设置项目的目录结构和具体的代码模板，\n可以方便的从零生成一个完整的项目，也可以在已有项目结构中生成指定的代码文件。")]),a._v(" "),t("h2",{attrs:{id:"_7-1-项目文件简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-项目文件简介"}},[a._v("#")]),a._v(" 7.1 项目文件简介")]),a._v(" "),t("p",[a._v("所有内容都在 "),t("code",[a._v("src/main/resources")]),a._v(" 下面：")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("lib")]),a._v(" 目录，代码生成器和数据库驱动 jar 包放到该目录下\n"),t("ul",[t("li",[t("code",[a._v("mysql-connector-java-5.1.49.jar")]),a._v(" MySQL驱动，当前只提供了MySQL驱动，\n自己可以替换版本，连接其他数据库时，将对应的驱动放到当前 lib 目录下，\n你可以把自己常用的各种数据库驱动都放在这里。")]),a._v(" "),t("li",[t("code",[a._v("rui-cli.jar")]),a._v(" 代码生成器")])])]),a._v(" "),t("li",[t("code",[a._v("mapper-templates")]),a._v(" 模板文件\n"),t("ul",[t("li",[t("code",[a._v("model.java")]),a._v("  普通的实体类模板")]),a._v(" "),t("li",[t("code",[a._v("model-lombok.java")]),a._v(" 使用 lombok 注解的实体类模板")]),a._v(" "),t("li",[t("code",[a._v("mapper.java")]),a._v(" Mapper 接口模板")]),a._v(" "),t("li",[t("code",[a._v("mapper.xml")]),a._v(" Mapper XML 模板")]),a._v(" "),t("li",[t("code",[a._v("service.java")]),a._v(" Service 接口模板")]),a._v(" "),t("li",[t("code",[a._v("serviceImpl.java")]),a._v(" Service 接口实现模板")])])]),a._v(" "),t("li",[t("code",[a._v("project.yaml")]),a._v(" 代码生成器配置文件")])]),a._v(" "),t("p",[a._v("这部分内容需要下载使用，为了方便使用，提供一个压缩包直接下载使用（最新模板从当前项目下载）。")]),a._v(" "),t("blockquote",[t("p",[t("strong",[a._v("百度网盘")]),t("br"),a._v("\n链接：https://pan.baidu.com/s/1uyROE1dgvrp8h-yGG3rR6Q"),t("br"),a._v("\n提取码：an7g")]),a._v(" "),t("p",[a._v("数据库驱动部分提供一些链接，可以根据需要进行下载：")]),a._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://mvnrepository.com/artifact/mysql/mysql-connector-java",target:"_blank",rel:"noopener noreferrer"}},[a._v("MySQL Connector/J"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"https://mvnrepository.com/artifact/org.mariadb.jdbc/mariadb-java-client",target:"_blank",rel:"noopener noreferrer"}},[a._v("MariaDB Java Client"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"https://mvnrepository.com/artifact/org.postgresql/postgresql",target:"_blank",rel:"noopener noreferrer"}},[a._v("PostgreSQL JDBC Driver"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"https://mvnrepository.com/artifact/com.microsoft.sqlserver/mssql-jdbc",target:"_blank",rel:"noopener noreferrer"}},[a._v("Microsoft JDBC Driver For SQL Server"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"https://mvnrepository.com/artifact/net.sourceforge.jtds/jtds",target:"_blank",rel:"noopener noreferrer"}},[a._v("JTDS for Microsoft SQL Server"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"https://mvnrepository.com/artifact/com.oracle.database.jdbc/ojdbc10",target:"_blank",rel:"noopener noreferrer"}},[a._v("Oracle JDBC Driver - Ojdbc10"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc",target:"_blank",rel:"noopener noreferrer"}},[a._v("SQLite JDBC"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"https://mvnrepository.com/artifact/org.apache.derby/derbyclient",target:"_blank",rel:"noopener noreferrer"}},[a._v("Apache Derby Client JDBC Driver"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"https://mvnrepository.com/artifact/ru.yandex.clickhouse/clickhouse-jdbc",target:"_blank",rel:"noopener noreferrer"}},[a._v("ClickHouse JDBC"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"https://mvnrepository.com/artifact/com.ibm.db2/jcc",target:"_blank",rel:"noopener noreferrer"}},[a._v("DB2 - IBM Data Server Driver For JDBC and SQLJ"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"https://mvnrepository.com/artifact/com.informix/informix-driver",target:"_blank",rel:"noopener noreferrer"}},[a._v("Informix Driver"),t("OutboundLink")],1)])])]),a._v(" "),t("h2",{attrs:{id:"_7-2-代码生成器配置-project-yaml"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-代码生成器配置-project-yaml"}},[a._v("#")]),a._v(" 7.2 代码生成器配置 project.yaml")]),a._v(" "),t("p",[a._v("下面通过注释介绍每一项配置的含义或者作用：")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 模板的名字，生成代码的根目录名称")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" mybatis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("mapper"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("demo\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 代码生成的路径，可以使用 SYS 和 ENV 等变量，具体包含的内容和运行环境有关")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# user.dir 为当前运行命令的目录，path 不设置时的默认值也是当前路径")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 当 path 路径以 .zip 后缀结尾时，会将生成的目录结构和代码放到压缩包中")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#【命令行】可以通过 —o 重新指定位置")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("path")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" $"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("SYS"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'user.dir'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("/\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 模板文件所在路径，默认为相对 path 所在的位置，不设置时和 path 相同")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#【命令行】可以通过 —T 重新指定位置")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("templates")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" mapper"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("templates\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 数据库配置")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("database")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" \n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 数据库连接配置")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("jdbcConnection")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 使用方言，默认为 JDBC 方式，可能会取不到表或字段注释")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 后续介绍如何通过字典匹配注释值")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#【命令行】可以通过 --jdbc.dialect 覆盖")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("dialect")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" MYSQL\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# jdbc驱动")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#【命令行】可以通过 --jdbc.driver 覆盖")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("driver")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" com.mysql.jdbc.Driver\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# jdbc连接地址")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#【命令行】可以通过 --jdbc.url 覆盖")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("url")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" jdbc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("mysql"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("//localhost"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("3306/test"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("?")]),a._v("useSSL=false\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 用户名")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#【命令行】可以通过 --jdbc.user 覆盖")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("user")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" root\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 密码")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#【命令行】可以通过 --jdbc.password 覆盖")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("password")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" root\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 获取表配置，支持 % 和 _ 模糊匹配，可以配置多个值  ")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 还有一个支持复杂规则 tableRules 属性后续单独介绍")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#【命令行】可以通过 -t table1,table2 覆盖")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("tables")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'%'")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 根据类型对字段类型打标签, 可以通过 column.tags.TAG 的 true/false 来判断当前列是否有该标签")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 主要对列进行分类，方便后续模板中的使用")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("typeTags")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 示例，针对日期时间设置 jdbcType 标签，生成的代码中，如果有该标签，会指定 jdbcType 的值")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("jdbcType")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" DATE\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" TIME\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" TIMESTAMP\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 关键字包装，这里的示例针对 MySQL，不提供默认值，需要根据数据库语法进行设置，其中的 %s 为关键字（表名或列名）")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("keywordWrap")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"`%s`"')]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 数据库关键字，列举的关键字会进行包装处理，没有默认值，需要自己配置所有可能的关键字")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("keywords")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" order\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" desc\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 附加属性")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#【命令行】可以通过 -AbasePackage=com.company 覆盖或增加新属性")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("attrs")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 子目录（文件）可以通过 parent.parent...attrs.属性名 可以逐级向上使用属性")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 这里设置了一个基础包名")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("basePackage")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" io.mybatis.demo.mybatis\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 子目录（文件）")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("files")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 文件名，可以 / 设置多级目录")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" src/main\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 子目录（文件）")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("files")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" java\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("files")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" \n          "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 包，可以多层，名称可以引用当前结构的所有属性，也可以使用 tables 数据表信息")]),a._v("\n          "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'${project.attrs.basePackage}'")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 设置类型为 package，尽可能都指定，默认会计算，默认为目录。包下面的默认都是包")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" PACKAGE\n            "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("files")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n              "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 包名")]),a._v("\n              "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" mapper\n                "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("files")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n                  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 模板文件，下面 iter 对 tables 所有表进行迭代，因此这里的模板会根据表的数量进行循环生成")]),a._v("\n                  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 迭代循环时，单个迭代对象的默认名为 it，因此这里的 name 就是表名（类名形式）为前缀的 Mapper 接口")]),a._v("\n                  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'${it.name.className}Mapper.java'")]),a._v("\n                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 使用的模板名，会从上面配置的 templates 下面查找")]),a._v("\n                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 包含多级目录时，这里可以指定相对 templates 的路径")]),a._v("\n                    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("file")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" mapper.java\n                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 可选配置 iter, 迭代的数据对象，当前可选为 tables 为反射的数据库表信息")]),a._v("\n                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# iter 值使用 mvel 表达式取值，除 tables 外也可以对当前 yaml 中的集合类型进行迭代，例如 project.files")]),a._v("\n                    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("iter")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" tables\n                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 可选配置 iterName，默认值为 it，在模板和上面的 name 中可以使用改变量的值")]),a._v("\n                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# iterName: it")]),a._v("\n                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 可选配置 filter, 绑定数据过滤器，使用 mvel 表达式，过滤条件不满足时不执行当前的操作，不生成相应的目录或文件")]),a._v("\n                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# filter: tables.size() > 0 # 仅仅是示例，size=0时本身也不会循环")]),a._v("\n                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 可选配置 itFilter，迭代数据过滤器，使用 mvel 表达式，当指定 iter 时，对迭代的数据进行过滤")]),a._v("\n                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 不满足条件时，只忽略当前的 it 数据，下面示例中当表名以 sys 为前缀时生成目录或代码")]),a._v("\n                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v('# iterFilter: it.name.original.o.startsWith("sys")')]),a._v("\n                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 可选配置 enabled，默认 true，当前目录（文件）有效，会生成，设置为 false 时忽略")]),a._v("\n                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# enabled: true")]),a._v("\n                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 可选配置 mode，默认值为 OVERRIDE，生成目录或文件时覆盖，可选值为:")]),a._v("\n                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# OVERRIDE: 覆盖")]),a._v("\n                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# ONCE: 只生成一次，或者如果目录或文件已存在时不生成(目录存在时，子文件也不会生成）")]),a._v("\n                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# MERGE: 合并已存在的文件和新生成的文件，需要满足规则才能合并")]),a._v("\n                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# mode: OVERRIDE")]),a._v("\n                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 可选配置 times，默认值 1，默认情况下，模板只经过一次变量替换，有时存在多层变量嵌套时，执行多次才能全部替换")]),a._v("\n                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# times: 1")]),a._v("\n              "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" model\n                "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("files")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n                  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'${it.name.className}.java'")]),a._v("\n                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 此处有2种模板示例，分别列出来加了注释")]),a._v("\n                    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("file")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" model.java\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#                    file: model-lombok.java")]),a._v("\n                    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("iter")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" tables\n              "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" service\n                "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("files")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n                  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'${it.name.className}Service.java'")]),a._v("\n                    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("file")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" service.java\n                    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("iter")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" tables\n                  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" impl\n                    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("files")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n                      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'${it.name.className}ServiceImpl.java'")]),a._v("\n                        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("file")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" serviceImpl.java\n                        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("iter")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" tables\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" resources\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("files")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n          "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" mappers\n            "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("files")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n              "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'${it.name.className}Mapper.xml'")]),a._v("\n                "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("iter")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" tables\n                "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("file")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" mapper.xml\n")])])]),t("p",[a._v("在模板的 YAML 配置中，数据库相关的配置定义了生成代码的元数据，files 中的内容定义了项目的结构和生成代码的位置。")]),a._v(" "),t("p",[a._v("变化比较多的配置是具体的一个 files 配置，下面是上面大段注释部分的整理，file 属性说明：")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("name: '${it.name.className}Mapper.java'")]),a._v("\n模板文件，下面 iter 对 tables 所有表进行迭代，因此这里的模板会根据表的数量进行循环生成；\n迭代循环时，单个迭代对象的默认名为 "),t("code",[a._v("it")]),a._v("，因此这里的 name 就是表名（类名形式）为前缀的 Mapper 接口。")]),a._v(" "),t("li",[t("code",[a._v("file: mapper.java")]),a._v(" 使用的模板名，会从上面配置的 templates 下面查找;\n包含多级目录时，这里可以指定相对 templates 的路径。")]),a._v(" "),t("li",[t("code",[a._v("iter: tables")]),a._v(": 可选配置 iter, 迭代的数据对象，当前可选为 tables 为反射的数据库表信息；\niter 值使用 mvel 表达式取值，除 tables 外也可以对当前 yaml 中的集合类型进行迭代，例如 project.files。")]),a._v(" "),t("li",[t("code",[a._v("iterName: it")]),a._v("\n可选配置 iterName，默认值为 it，在模板和上面的 name 中可以使用改变量的值。")]),a._v(" "),t("li",[t("code",[a._v("filter: tables.size() > 0")]),a._v(" 可选配置 filter, 绑定数据过滤器，使用 mvel 表达式，过滤条件不满足时不执行当前的操作，不生成相应的目录或文件。")]),a._v(" "),t("li",[t("code",[a._v('iterFilter: it.name.original.o.startsWith("sys")')]),a._v("\n可选配置 itFilter，迭代数据过滤器，使用 mvel 表达式，当指定 iter 时，对迭代的数据进行过滤；\n不满足条件时，只忽略当前的 it 数据，下面示例中当表名以 sys 为前缀时生成目录或代码。")]),a._v(" "),t("li",[t("code",[a._v("enabled: true")]),a._v(" 可选配置 enabled，默认 true，当前目录（文件）有效，会生成，设置为 false 时忽略。")]),a._v(" "),t("li",[t("code",[a._v("mode: OVERRIDE")]),a._v(" 可选配置 mode，默认值为 OVERRIDE，生成目录或文件时覆盖，可选值为:\n"),t("ul",[t("li",[t("code",[a._v("OVERRIDE")]),a._v(": 覆盖，默认值")]),a._v(" "),t("li",[t("code",[a._v("ONCE")]),a._v(": 只生成一次，或者如果目录或文件已存在时不生成(目录存在时，子文件也不会生成）")]),a._v(" "),t("li",[t("code",[a._v("MERGE")]),a._v(": 合并已存在的文件和新生成的文件，需要满足规则才能合并")])])]),a._v(" "),t("li",[t("code",[a._v("times: 1")]),a._v(" 可选配置 times，默认值 1，默认情况下，模板只经过一次变量替换，有时存在多层变量嵌套时，执行多次才能全部替换")])]),a._v(" "),t("blockquote",[t("p",[a._v("上面示例中的 "),t("code",[a._v('iterFilter: it.name.original.o.startsWith("sys")')]),a._v(" 中的 "),t("code",[a._v("it.name.original.o")]),a._v(" 很奇怪，下面模板介绍为什么会这么写。")])]),a._v(" "),t("h2",{attrs:{id:"_7-3-模板文件介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-模板文件介绍"}},[a._v("#")]),a._v(" 7.3 模板文件介绍")]),a._v(" "),t("p",[a._v("目前代码模板使用 "),t("code",[a._v("FreeMarker")]),a._v(" 模板引擎，点击查看 "),t("a",{attrs:{href:"http://www.kerneler.com/freemarker2.3.23/ref.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("模板语言参考文档"),t("OutboundLink")],1),a._v("。")]),a._v(" "),t("p",[a._v("针对 model 提供了 2 套模板：")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("model.java")]),a._v("  普通的实体类模板")]),a._v(" "),t("li",[t("code",[a._v("model-lombok.java")]),a._v(" 使用 lombok 注解的实体类模板")])]),a._v(" "),t("p",[a._v("修改配置文件下面的地方选择想要使用的文档：")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 在 model 包下面")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" model\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("files")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 有实体类代码，类名为表名的类形式")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'${it.name.className}.java'")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 此处有2种模板示例，具体类型看上面介绍")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("file")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" model.java\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# file: model-lombok.java")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("iter")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" tables\n")])])]),t("p",[a._v("当使用 lombok 版本的模板时，实体类使用了 "),t("code",[a._v("@Getter")]),a._v(" 和 "),t("code",[a._v("@Setter")]),a._v(" 注解，代码体中就不需要生成 getter 和 setter 的代码。\n如果你想使用 lombok 的 "),t("code",[a._v("@Data")]),a._v(" 或其他注解，你可以实现自己的模板（注意 "),t("code",[a._v("import")]),a._v(" 相应的类型）。")]),a._v(" "),t("h2",{attrs:{id:"_7-4-env-和-sys-可选值-使用示例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-4-env-和-sys-可选值-使用示例"}},[a._v("#")]),a._v(" 7.4 ENV 和 SYS 可选值，使用示例")]),a._v(" "),t("p",[a._v("代码生成器配置和模板中都可以使用 ENV 和 SYS 变量，这些变量和运行的环境有关，\n代码生成器运行时会输出当前环境的这些信息，想要修改为某些值时可以运行之后查找想要使用的名字。\n例如下面展示的"),t("strong",[a._v("部分内容")]),a._v("（示例为 macOS）：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("[main] TRACE Project - SYS可用参数:\n[main] TRACE Project - SYS['user.country'] = CN\n[main] TRACE Project - SYS['user.home'] = /Users/liuzh\n[main] TRACE Project - SYS['user.dir'] = /Users/liuzh/IdeaProjects/rui/core\n\n[main] TRACE Project - ENV可用参数:\n[main] TRACE Project - ENV['USER'] = liuzh\n[main] TRACE Project - ENV['PWD'] = /Users/liuzh/IdeaProjects/rui/core\n[main] TRACE Project - ENV['HOME'] = /Users/liuzh\n")])])]),t("p",[a._v("在模板中使用时，直接参考上面的写法，例如 "),t("code",[a._v("${SYS['user.home']}")]),a._v(" 和 "),t("code",[a._v("${ENV['HOME']}")]),a._v("。")]),a._v(" "),t("h2",{attrs:{id:"_7-5-代码生成器-rui-cli-jar"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-5-代码生成器-rui-cli-jar"}},[a._v("#")]),a._v(" 7.5 代码生成器 rui-cli.jar")]),a._v(" "),t("p",[a._v("代码生成器提供了一个可执行 jar 文件: rui-cli.jar")]),a._v(" "),t("blockquote",[t("p",[a._v("后续会提供基于 java swing 的 GUI 客户端，可以通过 UI 简单操作生成代码。")])]),a._v(" "),t("p",[a._v("可执行 jar 文件使用方式：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('用法: java -cp "lib/*" io.mybatis.rui.cli.Main [options]\n  Options:\n    -p, --project\n      代码生成器YAML配置文件\n    -o, --output\n      输出目录，默认使用配置文件中的 path，输出目录如果带 .zip 后缀，就会将生成的代码导出为压缩包\n    -T, --templates\n      模板文件路径，默认和YAML相同位置，或者为当前执行目录的相对位置\n    --jdbc.dialect\n      数据库方言\n      Possible Values: [JDBC, HSQLDB, ORACLE, DB2, SQLSERVER, MARIADB, MYSQL]\n    --jdbc.driver\n      数据库驱动\n    --jdbc.url\n      数据库URL\n    --jdbc.user\n      数据库用户\n    --jdbc.password\n      数据库密码\n    -t, --tables\n      要获取的表名，支持模糊匹配(%)，多个表名用逗号隔开，指定该值后会覆盖配置文件中的值\n    -A, -attrs\n      项目附加属性，会覆盖项目下的 attrs 配置\n      Syntax: -Akey=value\n      Default: {}\n    -h, --help\n      显示帮助信息\n')])])]),t("p",[a._v("在上面命令中，推荐 "),t("code",[a._v("-cp lib/*")]),a._v(" 使用 lib 目录下面的所有 jar 包，这样当你需要不同的数据库驱动时，\n将 JDBC 驱动放到该目录下面即可。")]),a._v(" "),t("p",[a._v("下面演示代码生成器的使用过程。")]),a._v(" "),t("h2",{attrs:{id:"_7-6-使用文档"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-6-使用文档"}},[a._v("#")]),a._v(" 7.6 使用文档")]),a._v(" "),t("p",[a._v("上面介绍了部分代码生成器的细节，最关键的内容是项目结构和代码模板，\n这两部分内容需要理解上面的内容后，根据自己的项目进行设计和模板编写，\n一旦编写好，只要项目结构和模板内容不变，这套模板就可以一直使用，\n后续变化的地方就是 JDBC连接配置，指定要连的数据库和要获取的表信息，\n因此除了代码生成器的初始配置和模板有一点难度外，后续的使用是非常简单的。")]),a._v(" "),t("p",[a._v("接下来我们以当前项目提供的模板为基础，介绍一下如果想应用到自己的项目，该如何修改配置，修改完配置之后如何生成项目结构和代码。")]),a._v(" "),t("h3",{attrs:{id:"_7-6-1-配置适配"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-6-1-配置适配"}},[a._v("#")]),a._v(" 7.6.1 配置适配")]),a._v(" "),t("h4",{attrs:{id:"_7-6-1-1-生成代码的目录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-6-1-1-生成代码的目录"}},[a._v("#")]),a._v(" 7.6.1.1 生成代码的目录")]),a._v(" "),t("p",[a._v("在 "),t("code",[a._v("project.yaml")]),a._v(" 中，"),t("code",[a._v("path")]),a._v(" 定义了项目所在的路径（不含项目名），\n示例中使用了默认值（不配置时也是改值）"),t("code",[a._v("${SYS['user.dir']}/")]),a._v("，\n这个目录和执行代码生成器命令时所在的目录一样，如果是第一次生成项目，\n生成到当前目录也没有问题，如果是已经存在的项目，\n就需要修改路径让代码可以直接生成到已有项目的目录结构中。")]),a._v(" "),t("p",[t("strong",[a._v("假设项目为 d:/idea-project/cms")]),a._v("，cms 是项目名，此时的配置如下：")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 项目名，和真实的 cms 名字对应")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" cms\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 项目所在路径")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("path")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" d"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("/idea"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("project/\n")])])]),t("h4",{attrs:{id:"_7-6-1-2-数据库配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-6-1-2-数据库配置"}},[a._v("#")]),a._v(" 7.6.1.2 数据库配置")]),a._v(" "),t("p",[a._v("数据库连接的配置按照示例修改即可，平时使用时，最常见的变化时 "),t("code",[a._v("tables")]),a._v(" 的值。")]),a._v(" "),t("p",[a._v("如果后续生成代码时不想重新生成已存在表的代码，就需要每次指定要生成的表的信息。")]),a._v(" "),t("p",[a._v("例如第一次的时候生成了所有 "),t("code",[a._v("sys_user")]),a._v(", "),t("code",[a._v("sys_role")]),a._v(" 等 "),t("code",[a._v("sys")]),a._v(" 开头的表，此时可以配置为：")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("tables")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" sys%\n")])])]),t("p",[a._v("假设后续要生成某几个表的，可以配置为具体的表名：")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("tables")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" account\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" content\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" comments\n")])])]),t("p",[a._v("表名可以写多个，而且每个都可以是具体表名，也可以使用模糊匹配，使用 "),t("code",[a._v("%")]),a._v(" 匹配任意个字符，使用 "),t("code",[a._v("_")]),a._v(" 匹配单个字符。")]),a._v(" "),t("h4",{attrs:{id:"_7-6-1-3-包名修改"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-6-1-3-包名修改"}},[a._v("#")]),a._v(" 7.6.1.3 包名修改")]),a._v(" "),t("p",[a._v("示例中为了展示 "),t("code",[a._v("attrs")]),a._v(" 属性的用法，因此在这里配置了一个 "),t("code",[a._v("basePackage")]),a._v(" 属性，这个属性在下面的包名 "),t("code",[a._v("name")]),a._v(" 使用了，\n根据自己的包名修改这里，例如："),t("code",[a._v("com.company.cms")]),a._v("，如果你的包和这里结构不一样，可以自己调整 "),t("code",[a._v("files")]),a._v(" 适配自己的结构。")]),a._v(" "),t("h4",{attrs:{id:"_7-6-1-4-类名规则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-6-1-4-类名规则"}},[a._v("#")]),a._v(" 7.6.1.4 类名规则")]),a._v(" "),t("p",[a._v("在 mapper 包下面循环生成了每个表对应的 Mapper 接口，这里定义的名称为 "),t("code",[a._v("'${it.name.className}Mapper.java'")]),a._v("，\n"),t("code",[a._v("表的类名")]),a._v("+"),t("code",[a._v("Mapper")]),a._v(" 后缀作为接口名，如果你喜欢使用 "),t("code",[a._v("Dao")]),a._v(" 后缀，就可以改为 "),t("code",[a._v("'${it.name.className}Dao.java'")]),a._v("，\n还需要注意修改所有使用（注入）该接口的地址，例如在 "),t("code",[a._v("serviceImpl.java")]),a._v(" 模板中：")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//省略其他")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" $"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("project"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("attrs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("basePackage"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("mapper"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("$"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("it"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("className"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Dao")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//省略其他")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Service")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v("  $"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("it"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("className"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ServiceImpl")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("extends")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("AbstractService")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("$"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("it"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("className"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Long")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" $"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("it"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("className"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Dao")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("implements")]),a._v(" $"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("it"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("className"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Service")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("只要保证模板内容和类型定义保持一致即可。")]),a._v(" "),t("h3",{attrs:{id:"_7-6-2-执行代码生成器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-6-2-执行代码生成器"}},[a._v("#")]),a._v(" 7.6.2 执行代码生成器")]),a._v(" "),t("p",[a._v("配置完成后，使用下面的命令生成代码：")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("java "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("cp "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"lib/*"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("io"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("mybatis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("rui"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("cli"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")])]),a._v("Main")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("p project"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("yaml\n")])])]),t("blockquote",[t("p",[t("strong",[a._v("由于写此文档时使用的 macOS，因此下面的日志文件和这里预设的目录结构不同，后续更新为目录一致的输出")])])]),a._v(" "),t("p",[a._v("执行命令后，输出日志如下：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("[main] TRACE Project - SYS可用参数:\n[main] TRACE Project - SYS['gopherProxySet'] = false\n#-----------------省略大量 SYS 属性-----------------------\n[main] TRACE Project - SYS['http.proxyPort'] = 8889\n[main] TRACE Project - ENV可用参数:\n[main] TRACE Project - ENV['JAVA_ARCH'] = x86_64\n#-----------------省略大量 ENV 属性-----------------------\n[main] TRACE Project - ENV['_'] = /usr/bin/java\n[main] DEBUG Project - 执行程序路径: /Users/liuzh/IdeaProjects/generator-cmd\n[main] DEBUG Project - basedir变量: /Users/liuzh/IdeaProjects/generator-cmd\n[main] DEBUG Project - yamlDir变量: /Users/liuzh/IdeaProjects/generator-cmd\n[main] DEBUG Database - 获取数据库信息\n[2021-05-30 17:40:37] [DEBUG] rui.pJ: Use [Hutool Console Logging] Logger As Default.\n[main] DEBUG Database - 获取表: role\n[main] TRACE Database - 记录列: id\n[main] TRACE Database - 记录列: role_name\n[main] DEBUG Database - 获取表: user\n[main] TRACE Database - 记录列: id\n[main] TRACE Database - 记录列: user_name\n[main] TRACE Database - 记录列: user_age\n[main] TRACE Database - 记录列: address\n[main] DEBUG Database - 获取表: user_role\n[main] TRACE Database - 记录列: id\n[main] TRACE Database - 记录列: user_id\n[main] TRACE Database - 记录列: role_id\n[main] DEBUG Database - 通过 SQL 获取表的注释信息\n[main] DEBUG Database - 执行 SQL: SELECT TABLE_NAME, TABLE_COMMENT FROM information_schema.TABLES WHERE TABLE_SCHEMA = 'test' AND TABLE_NAME in ( 'user_role','role','user' )\n[main] DEBUG Database - 表: role - 角色\n[main] DEBUG Database - 表: user - 用户\n[main] DEBUG Database - 表: user_role - 用户和角色关联\n[main] DEBUG Context - 生成项目路径: /Users/liuzh/IdeaProjects/\n[main] DEBUG Context - 读取模板路径: mapper-templates\n[main] DEBUG Generator - 已存在目录: /Users/liuzh/IdeaProjects/cms\n[main] DEBUG Generator - 已存在目录: /Users/liuzh/IdeaProjects/cms/src/main\n[main] DEBUG Generator - 已存在目录: /Users/liuzh/IdeaProjects/cms/src/main/java\n[main] DEBUG Generator - 已存在包: io.mybatis.demo.mybatis\n[main] DEBUG Generator - 已存在包: mapper\n[main] DEBUG Generator - 初次创建文件: RoleMapper.java\n[main] DEBUG Generator - 初次创建文件: UserMapper.java\n[main] DEBUG Generator - 初次创建文件: UserRoleMapper.java\n[main] DEBUG Generator - 已存在包: model\n[main] DEBUG Generator - 初次创建文件: Role.java\n[main] DEBUG Generator - 初次创建文件: User.java\n[main] DEBUG Generator - 初次创建文件: UserRole.java\n[main] DEBUG Generator - 已存在包: service\n[main] DEBUG Generator - 初次创建文件: RoleService.java\n[main] DEBUG Generator - 初次创建文件: UserService.java\n[main] DEBUG Generator - 初次创建文件: UserRoleService.java\n[main] DEBUG Generator - 已存在包: impl\n[main] DEBUG Generator - 初次创建文件: RoleServiceImpl.java\n[main] DEBUG Generator - 初次创建文件: UserServiceImpl.java\n[main] DEBUG Generator - 初次创建文件: UserRoleServiceImpl.java\n[main] DEBUG Generator - 已存在目录: /Users/liuzh/IdeaProjects/cms/src/main/resources\n[main] DEBUG Generator - 已存在目录: /Users/liuzh/IdeaProjects/cms/src/main/resources/mappers\n[main] DEBUG Generator - 初次创建文件: RoleMapper.xml\n[main] DEBUG Generator - 初次创建文件: UserMapper.xml\n[main] DEBUG Generator - 初次创建文件: UserRoleMapper.xml\n")])])]),t("p",[a._v("rui-cli.jar 中包含了多个可以覆盖默认配置的参数，大部分参数仍然建议在配置文件中指定。")]),a._v(" "),t("p",[a._v("如果想要生成的代码导出为 ZIP 压缩包，只需要在上面的命令后面增加 "),t("code",[a._v("-o cms.zip")]),a._v(" 即可在执行的目录中生成一个 "),t("code",[a._v("cms.zip")]),a._v(" 压缩包文件：")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("java "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("cp "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"lib/*"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("io"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("mybatis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("rui"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("cli"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")])]),a._v("Main")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("p project"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("yaml "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("o cms"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("zip\n")])])]),t("p",[a._v("执行命令后，最终生成 "),t("code",[a._v("cms.zip")]),a._v(" 文件，文件结构如下：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("$ unzip -v cms.zip \nArchive:  cms.zip\n Length   Method    Size  Cmpr    Date    Time   CRC-32   Name\n--------  ------  ------- ---- ---------- ----- --------  ----\n       0  Defl:N        2   0% 05-30-2021 18:17 00000000  cms/\n       0  Defl:N        2   0% 05-30-2021 18:17 00000000  cms/src/\n       0  Defl:N        2   0% 05-30-2021 18:17 00000000  cms/src/main/\n       0  Defl:N        2   0% 05-30-2021 18:17 00000000  cms/src/main/java/\n       0  Defl:N        2   0% 05-30-2021 18:17 00000000  cms/src/main/java/io/\n       0  Defl:N        2   0% 05-30-2021 18:17 00000000  cms/src/main/java/io/mybatis/\n       0  Defl:N        2   0% 05-30-2021 18:17 00000000  cms/src/main/java/io/mybatis/demo/\n       0  Defl:N        2   0% 05-30-2021 18:17 00000000  cms/src/main/java/io/mybatis/demo/mybatis/\n       0  Defl:N        2   0% 05-30-2021 18:17 00000000  cms/src/main/java/io/mybatis/demo/mybatis/mapper/\n     177  Defl:N      135  24% 05-30-2021 18:17 bf55dc13  cms/src/main/java/io/mybatis/demo/mybatis/mapper/RoleMapper.java\n     177  Defl:N      135  24% 05-30-2021 18:17 46655d51  cms/src/main/java/io/mybatis/demo/mybatis/mapper/UserMapper.java\n     205  Defl:N      160  22% 05-30-2021 18:17 b161f496  cms/src/main/java/io/mybatis/demo/mybatis/mapper/UserRoleMapper.java\n       0  Defl:N        2   0% 05-30-2021 18:17 00000000  cms/src/main/java/io/mybatis/demo/mybatis/model/\n     991  Defl:N      438  56% 05-30-2021 18:17 a7ea4bb7  cms/src/main/java/io/mybatis/demo/mybatis/model/Role.java\n    1679  Defl:N      581  65% 05-30-2021 18:17 1ef86c27  cms/src/main/java/io/mybatis/demo/mybatis/model/User.java\n    1341  Defl:N      504  62% 05-30-2021 18:17 92c5bec1  cms/src/main/java/io/mybatis/demo/mybatis/model/UserRole.java\n       0  Defl:N        2   0% 05-30-2021 18:17 00000000  cms/src/main/java/io/mybatis/demo/mybatis/service/\n     235  Defl:N      153  35% 05-30-2021 18:17 efb596bd  cms/src/main/java/io/mybatis/demo/mybatis/service/RoleService.java\n     235  Defl:N      153  35% 05-30-2021 18:17 59b608c0  cms/src/main/java/io/mybatis/demo/mybatis/service/UserService.java\n     267  Defl:N      177  34% 05-30-2021 18:17 5121a031  cms/src/main/java/io/mybatis/demo/mybatis/service/UserRoleService.java\n       0  Defl:N        2   0% 05-30-2021 18:17 00000000  cms/src/main/java/io/mybatis/demo/mybatis/service/impl/\n     442  Defl:N      218  51% 05-30-2021 18:17 26c22e04  cms/src/main/java/io/mybatis/demo/mybatis/service/impl/RoleServiceImpl.java\n     442  Defl:N      219  51% 05-30-2021 18:17 fdabfe3b  cms/src/main/java/io/mybatis/demo/mybatis/service/impl/UserServiceImpl.java\n     490  Defl:N      247  50% 05-30-2021 18:17 742f3203  cms/src/main/java/io/mybatis/demo/mybatis/service/impl/UserRoleServiceImpl.java\n       0  Defl:N        2   0% 05-30-2021 18:17 00000000  cms/src/main/resources/\n       0  Defl:N        2   0% 05-30-2021 18:17 00000000  cms/src/main/resources/mappers/\n     435  Defl:N      252  42% 05-30-2021 18:17 afff9e3d  cms/src/main/resources/mappers/RoleMapper.xml\n     574  Defl:N      277  52% 05-30-2021 18:17 920e9299  cms/src/main/resources/mappers/UserMapper.xml\n     505  Defl:N      253  50% 05-30-2021 18:17 ef08156b  cms/src/main/resources/mappers/UserRoleMapper.xml\n--------          -------  ---                            -------\n    8195             3930  52%                            29 files\n")])])]),t("p",[a._v("其他参数可以自己尝试。")]),a._v(" "),t("h2",{attrs:{id:"_7-7-总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-7-总结"}},[a._v("#")]),a._v(" 7.7 总结")]),a._v(" "),t("p",[a._v("睿Rui是一个非常灵活易用的代码生成器，包含的功能细节非常的多，本篇文档旨在入门，还有很多内容没有展示出来，后续会针对睿Rui提供一些进阶使用文档，后续的计划如下：")]),a._v(" "),t("ul",[t("li",[a._v("【文档】编写自己的代码模板")]),a._v(" "),t("li",[a._v("【文档】项目结构和代码的配置")]),a._v(" "),t("li",[a._v("【文档】tableRules 表名、列名特殊配置配置和字典设置")]),a._v(" "),t("li",[a._v("【文档】MERGE 合并文件用法介绍")]),a._v(" "),t("li",[a._v("【文档】使用 睿Rui 生成完整项目")]),a._v(" "),t("li",[a._v("【直播】分享 睿Rui-cli 代码生成器配置和使用")]),a._v(" "),t("li",[a._v("【文档】睿Rui-tpl 代码模板生成器的使用文档（生成代码生成器配置的工具）")]),a._v(" "),t("li",[a._v("【直播】以比较火的某个框架作为示例使用 睿Rui-tpl")]),a._v(" "),t("li",[a._v("【文档】睿Rui-gui 代码生成器GUI客户端使用说明")]),a._v(" "),t("li",[a._v("【工具】睿Rui-idea-plugin IDEA插件，结合IDEA的datasource使用代码生成器")]),a._v(" "),t("li",[a._v("【工具】睿Rui-SaaS 代码生成器发布，提供模板市场")])])])}),[],!1,null,null,null);t.default=n.exports}}]);